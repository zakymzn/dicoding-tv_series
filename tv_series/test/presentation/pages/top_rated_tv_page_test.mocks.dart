// Mocks generated by Mockito 5.3.2 from annotations
// in tv_series/test/presentation/pages/top_rated_tv_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:core/core.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_series/tv_series.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTopRatedTv_0 extends _i1.SmartFake implements _i2.GetTopRatedTv {
  _FakeGetTopRatedTv_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TopRatedTvNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvNotifier extends _i1.Mock
    implements _i2.TopRatedTvNotifier {
  MockTopRatedTvNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTopRatedTv get getTopRatedTv => (super.noSuchMethod(
        Invocation.getter(#getTopRatedTv),
        returnValue: _FakeGetTopRatedTv_0(
          this,
          Invocation.getter(#getTopRatedTv),
        ),
      ) as _i2.GetTopRatedTv);
  @override
  _i3.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i3.RequestState.empty,
      ) as _i3.RequestState);
  @override
  List<_i2.Tv> get tv => (super.noSuchMethod(
        Invocation.getter(#tv),
        returnValue: <_i2.Tv>[],
      ) as List<_i2.Tv>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i4.Future<void> fetchTopRatedTv() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedTv,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
